/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package simpleFactoryPattern;

public class App {
  public String getGreeting() {
    return "Hello world.";
  }

  public static void main(String[] args) {
    System.out.println(new App().getGreeting());
  }

  public Pizza orderPizza(String pizzaType) {
    Pizza pizza;
    /**
     * The following code is not very good. The code is not scalable and not easy to change. For
     * example, if I want to add a new type in the pizza type, or remove an old type, I will need to
     * change the code, which can be prone to error.
     *
     * <p>The Factory pattern will allow me to take the following if else statement out and put them
     * into a new abstraction.
     */
    if (pizzaType.equals("cheese")) {
      pizza = new CheesePizza();
    } else if (pizzaType.equals("greek")) {
      pizza = new GreekPizza();
    } else {
      pizza = new Pepperoni();
    }

    pizza.prepare();
    pizza.bake();
    pizza.cut();
    pizza.box();

    return pizza;
  }
}
